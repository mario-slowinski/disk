---
- name: "Install mdadm software"
  tags:
    - disk.mdraid.software
  ansible.builtin.include_role:
    name: software
  vars:
    software_pkgs:
      - name: mdadm

- name: "Create mdraid"
  tags:
    - disk.mdraid.create
  ansible.builtin.shell:
    cmd: >-
      set -o pipefail &&
      yes |
      mdadm
      --create {{ item['device'] }}
      --level={{ item['level'] }}
      --name={{ item['name'] }}
      --raid-devices={{ item['devices'] | length }}
      {{ item['options'] | default([]) | join(' ') }}
      {{ item['devices'] | join(' ') }}
    creates: "{{ item['device'] }}"
  loop: "{{ disk_mdraids }}"
  loop_control:
    label: >
      {{ item['device'] }}
      level={{ item['level'] }}
      devices={{ item['devices'] | join(',') }}
  become: true
  register: mdraid_create

- name: "Update mdadm.conf"
  tags:
    - disk.mdraid.conf
  block:
    - name: "Examine md devices"
      ansible.builtin.command: mdadm --examine --scan
      become: true
      changed_when: false
      register: mdadm_conf
    - name: "Save md devices in {{ disk_mdraid_conf['path'] }}"
      ansible.builtin.lineinfile:
        path: "{{ disk_mdraid_conf['path'] }}"
        create: true
        line: "{{ item }}"
        owner: "{{ disk_mdraid_conf['owner'] }}"
        group: "{{ disk_mdraid_conf['group'] }}"
        mode: "{{ disk_mdraid_conf['mode'] }}"
        setype: "{{ disk_mdraid_conf['setype'] }}"
      loop: "{{ mdadm_conf['stdout_lines'] }}"
      loop_control:
        label: "{{ item }}"
      become: true

- name: "Update initramfs"
  tags:
    - disk.mdraid.initramfs
  ansible.builtin.command: dracut -f --mdadmconf --add=mdraid --add-drivers="raid1"
  become: true
  when: mdraid_create['changed']
